5Ô∏è‚É£ Mentorship programs
API: MentorCruise API
https://mentorcruise.com/api/

(Access requires application ‚Äî assuming access granted.)

Example:
Request:
bash
Copy
Edit
GET https://mentorcruise.com/api/v1/mentors?topic=data%20science
Authorization: Token YOUR_API_TOKEN

----
Job postings or openings
API: Jooble API
https://jooble.org/api/about

Example:
Request:
bash
Copy
Edit
POST https://jooble.org/api/YOUR_API_KEY/
Content-Type: application/json

{
  "keywords": "data scientist",
  "location": "New York"
}
Response (simplified):

----
Available courses and certifications
API: Udemy API
https://www.udemy.com/developers/

Example:
Request:
bash
Copy
Edit
GET https://www.udemy.com/api-2.0/courses/?search=data%20science
Authorization: Basic YOUR_BASE64_ENCODED_CLIENT_ID_AND_SECRET













axios
        .post(
          "https://openrouter.ai/api/v1/chat/completions",
          {
            model: "deepseek/deepseek-r1-0528-qwen3-8b:free",
            messages: [
              {
                role: "user",
                content: `You are a professional career advisor AI.

You will receive user data with detailed personal and professional information.

Your task is to analyze this data and generate exactly 10 career recommendations fully customized to the user.

Return only valid JSON output.

Do not write any comments, markdown, explanations, introductions, or notes ‚Äî only output the JSON array as described below.

Each object in the array must follow this format:

{
  "jobTitle": "text",
  "description": "text",
  "requiredSkills": "skill_name, skill_name...",
  "recommendedCertificates": "certificate_name, certificate_name...",
  "estimatedSalaryRange": "xxxxx-xxxxx USD annually",
  "difficulty": "x/5",
}
  
Rules:

- Fully populate every field. None should be empty.
- Use at least 5 highly specific, real-world skills in "requiredSkills".
- Use at least 4 real, widely recognized certificates in "recommendedCertificates".
- For "estimatedSalaryRange": always write annual salary in USD, e.g. "75000-90000 USD annually".
- For "difficulty": always write in the format "x/5".
- DO NOT include any years, dates, or timestamps inside "requiredSkills" or "recommendedCertificates" arrays.
- DO NOT include any control characters such as tabs (\t), newlines (\n), or any other special escape sequences inside the JSON.
- DO NOT write phrases like "x more objects", "similar objects", "etc.", or "...". Write all 10 objects fully.
- DO NOT summarize, abbreviate, or omit any entries.
- DO NOT write anything outside the pure JSON array.
- Output must be strict valid JSON that can be parsed programmatically.
- Each object should have unique and realistic content.


User input data:

{
  "skills": ${user?.skills},
  "experience": ${user?.experiences},
  "interests": ${user?.interests},
  "education": ${user?.education},
  "city": ${user?.city},
  "country": ${user?.country},
  "certificates": ${user?.certificates},
  "personality": ${user?.personality}
}
DO NOT WRITE ANYTHING ELSE BESIDES THE JSON
PLEASE FINISH THE JSON AND WRITE IT TO BE VALID
üîé Global issues to avoid:
1Ô∏è‚É£ Missing some commas
2Ô∏è‚É£ Extra commas (trailing commas)
3Ô∏è‚É£ Mixed use of single quotes ' and double quotes " inside arrays
4Ô∏è‚É£ Some mismatched quotes inside strings

DONT Write anything that is not necessary
`,
              },
            ],
          },
          {
            headers: {
              Authorization:
                "Bearer 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",
              "Content-Type": "application/json",
            },
          }
        )














        